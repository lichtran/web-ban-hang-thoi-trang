[{"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\index.js":"1","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\store.js":"2","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\reportWebVitals.js":"3","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\App.js":"4","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\History\\History.jsx":"5","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Checkout\\Checkout.jsx":"6","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Home\\Home.jsx":"7","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Detail\\Detail.jsx":"8","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Cart\\Cart.jsx":"9","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Reducer\\ReducerRoot.jsx":"10","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\SignIn.jsx":"11","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\SignUp.jsx":"12","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\Header\\Header.jsx":"13","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\Footer\\Footer.jsx":"14","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Shop.jsx":"15","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\Chat\\Chat.jsx":"16","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Reducer\\ReducerSession.jsx":"17","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\LoginLink.jsx":"18","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\LogoutLink.jsx":"19","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\History\\Component\\MainHistory.jsx":"20","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\UserAPI.jsx":"21","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\ProductAPI.jsx":"22","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\CartAPI.jsx":"23","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\CheckoutAPI.jsx":"24","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\MessengerAPI.jsx":"25","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\CommentAPI.jsx":"26","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Action\\ActionSession.jsx":"27","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Action\\ActionCart.jsx":"28","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\History\\Component\\DetailHistory.jsx":"29","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Cart\\Component\\ListCart.jsx":"30","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\Name.jsx":"31","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Reducer\\ReducerCart.jsx":"32","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\img\\Image.jsx":"33","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\Products.jsx":"34","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\Search.jsx":"35","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\Pagination.jsx":"36","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\SortProduct.jsx":"37","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\HistoryAPI.jsx":"38","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\axiosClient.jsx":"39","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\IndexPage.jsx":"40"},{"size":638,"mtime":1678530975360,"results":"41","hashOfConfig":"42"},{"size":156,"mtime":1678530975362,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1678530975361,"results":"44","hashOfConfig":"42"},{"size":1329,"mtime":1678530975315,"results":"45","hashOfConfig":"42"},{"size":457,"mtime":1678530975331,"results":"46","hashOfConfig":"42"},{"size":12302,"mtime":1678708461161,"results":"47","hashOfConfig":"42"},{"size":15433,"mtime":1684534033835,"results":"48","hashOfConfig":"42"},{"size":20454,"mtime":1684534326126,"results":"49","hashOfConfig":"42"},{"size":11204,"mtime":1678530975323,"results":"50","hashOfConfig":"42"},{"size":255,"mtime":1678530975337,"results":"51","hashOfConfig":"42"},{"size":5323,"mtime":1679119098089,"results":"52","hashOfConfig":"42"},{"size":7646,"mtime":1678706593006,"results":"53","hashOfConfig":"42"},{"size":3805,"mtime":1678530975343,"results":"54","hashOfConfig":"42"},{"size":2804,"mtime":1683607098670,"results":"55","hashOfConfig":"42"},{"size":11279,"mtime":1684533733041,"results":"56","hashOfConfig":"42"},{"size":11041,"mtime":1679110287778,"results":"57","hashOfConfig":"42"},{"size":674,"mtime":1678530975338,"results":"58","hashOfConfig":"42"},{"size":659,"mtime":1678530975319,"results":"59","hashOfConfig":"42"},{"size":355,"mtime":1678530975320,"results":"60","hashOfConfig":"42"},{"size":5630,"mtime":1678530975330,"results":"61","hashOfConfig":"42"},{"size":549,"mtime":1678792060597,"results":"62","hashOfConfig":"42"},{"size":693,"mtime":1679116895326,"results":"63","hashOfConfig":"42"},{"size":578,"mtime":1678530975308,"results":"64","hashOfConfig":"42"},{"size":213,"mtime":1678530975309,"results":"65","hashOfConfig":"42"},{"size":485,"mtime":1678530975311,"results":"66","hashOfConfig":"42"},{"size":352,"mtime":1678530975310,"results":"67","hashOfConfig":"42"},{"size":228,"mtime":1678530975335,"results":"68","hashOfConfig":"42"},{"size":422,"mtime":1678530975334,"results":"69","hashOfConfig":"42"},{"size":4690,"mtime":1678530975329,"results":"70","hashOfConfig":"42"},{"size":6344,"mtime":1678530975325,"results":"71","hashOfConfig":"42"},{"size":1275,"mtime":1678530975321,"results":"72","hashOfConfig":"42"},{"size":3514,"mtime":1678530975336,"results":"73","hashOfConfig":"42"},{"size":313,"mtime":1678530975344,"results":"74","hashOfConfig":"42"},{"size":3076,"mtime":1678530975355,"results":"75","hashOfConfig":"42"},{"size":1244,"mtime":1678530975356,"results":"76","hashOfConfig":"42"},{"size":2239,"mtime":1678530975354,"results":"77","hashOfConfig":"42"},{"size":824,"mtime":1678530975356,"results":"78","hashOfConfig":"42"},{"size":331,"mtime":1678530975310,"results":"79","hashOfConfig":"42"},{"size":815,"mtime":1678601071600,"results":"80","hashOfConfig":"42"},{"size":1121,"mtime":1678530975353,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1kuls6j",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\index.js",[],["179","180"],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\store.js",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\reportWebVitals.js",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\App.js",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\History\\History.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Checkout\\Checkout.jsx",["181","182","183"],"import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string'\r\nimport CartAPI from '../API/CartAPI';\r\nimport CheckoutAPI from '../API/CheckoutAPI';\r\nimport './Checkout.css'\r\n\r\n// import io from \"socket.io-client\";\r\n// const socket = io(\"http://localhost:8000\");\r\n\r\nfunction Checkout(props) {\r\n\r\n    const [carts, setCarts] = useState([])\r\n\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const [fullname, setFullname] = useState('')\r\n    const [fullnameError, setFullnameError] = useState(false)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [emailError, setEmailError] = useState(false)\r\n\r\n    const [emailRegex, setEmailRegex] = useState(false)\r\n\r\n    const [phone, setPhone] = useState('')\r\n    const [phoneError, setPhoneError] = useState(false)\r\n\r\n    const [address, setAddress] = useState('')\r\n    const [addressError, setAddressError] = useState(false)\r\n\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const [load, setLoad] = useState(false)\r\n\r\n\r\n    //Hàm này dùng để gọi API và render số sản phẩm\r\n    useEffect(() => {\r\n\r\n        if (sessionStorage.getItem('id_user')) {\r\n\r\n            const fetchData = async () => {\r\n\r\n                const params = {\r\n                    idUser: sessionStorage.getItem('id_user')\r\n                }\r\n\r\n                const query = '?' + queryString.stringify(params)\r\n\r\n                const response = await CartAPI.getCarts(query)\r\n\r\n                console.log(response)\r\n\r\n                setCarts(response)\r\n\r\n                getTotal(response)\r\n\r\n                if (response.length === 0) {\r\n                    window.location.replace(\"/cart\");\r\n                }\r\n\r\n            }\r\n\r\n            fetchData()\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    //Hàm này dùng để tính tổng tiền carts\r\n    function getTotal(carts) {\r\n        let sub_total = 0\r\n\r\n        const sum_total = carts.map(value => {\r\n            return sub_total += parseInt(value.priceProduct) * parseInt(value.count)\r\n        })\r\n\r\n        setTotal(sub_total)\r\n    }\r\n\r\n\r\n    //Check Validation\r\n    const handlerSubmit = () => {\r\n        if (!fullname) {\r\n            setFullnameError(true)\r\n            setEmailError(false)\r\n            setPhoneError(false)\r\n            setAddressError(false)\r\n            return\r\n        } else {\r\n            if (!email) {\r\n                setFullnameError(false)\r\n                setEmailError(true)\r\n                setPhoneError(false)\r\n                setAddressError(false)\r\n                return\r\n            } else {\r\n\r\n                setPhoneError(false)\r\n                setAddressError(false)\r\n                setFullnameError(false)\r\n\r\n                if (!validateEmail(email)) {\r\n                    setEmailRegex(true)\r\n                    setFullnameError(false)\r\n                    setEmailError(false)\r\n                    setPhoneError(false)\r\n                    setAddressError(false)\r\n                    return\r\n                } else {\r\n                    setEmailRegex(false)\r\n\r\n                    if (!phone) {\r\n                        setFullnameError(false)\r\n                        setEmailError(false)\r\n                        setPhoneError(true)\r\n                        setAddressError(false)\r\n                        return\r\n                    } else {\r\n\r\n                        setFullnameError(false)\r\n                        setEmailError(false)\r\n                        setPhoneError(false)\r\n                        setAddressError(false)\r\n\r\n                        if (!address) {\r\n                            setFullnameError(false)\r\n                            setEmailError(false)\r\n                            setPhoneError(false)\r\n                            setAddressError(true)\r\n                        } else {\r\n                            console.log(\"Thanh Cong\")\r\n\r\n                            setLoad(!load)\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //Hàm này bắt đầu gửi Email xác nhận đơn hàng\r\n    useEffect(() => {\r\n\r\n        if (load) {\r\n\r\n            const sendMail = async () => {\r\n\r\n                const params = {\r\n                    to: email,\r\n                    fullname: fullname,\r\n                    phone: phone,\r\n                    address: address,\r\n                    idUser: sessionStorage.getItem('id_user')\r\n                }\r\n\r\n                const query = '?' + queryString.stringify(params)\r\n\r\n                const response = await CheckoutAPI.postEmail(query)\r\n\r\n                console.log(response)\r\n\r\n            }\r\n\r\n            sendMail()\r\n            \r\n            // const data = sessionStorage.getItem('id_user')\r\n\r\n            // // Gửi socket lên server\r\n            // socket.emit('send_order', data)\r\n        \r\n            //Dùng setTimeout delay 3s\r\n            //Sau 4s nó sẽ thực hiện \r\n            setTimeout(() => {\r\n                setSuccess(!success)\r\n                setLoad(!load)\r\n            }, 4000);\r\n\r\n        }\r\n\r\n    }, [load])\r\n\r\n    const onChangeName = (e) => {\r\n        setFullname(e.target.value)\r\n    }\r\n\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePhone = (e) => {\r\n        setPhone(e.target.value)\r\n    }\r\n\r\n    const onChangeAddress = (e) => {\r\n        setAddress(e.target.value)\r\n    }\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                load && (\r\n                    <div className=\"wrapper_loader\">\r\n                        <div className=\"loader\"></div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <div className=\"container\">\r\n                <section className=\"py-5 bg-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\r\n                            <div className=\"col-lg-6\">\r\n                                <h1 className=\"h2 text-uppercase mb-0\">Checkout</h1>\r\n                            </div>\r\n                            <div className=\"col-lg-6 text-lg-right\">\r\n                                <nav aria-label=\"breadcrumb\">\r\n                                    <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\r\n                                        <li className=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\r\n                                        <li className=\"breadcrumb-item\"><a href=\"cart.html\">Cart</a></li>\r\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Checkout</li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {!success && (<section className=\"py-5\">\r\n                    <h2 className=\"h5 text-uppercase mb-4\">Billing details</h2>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 form-group\">\r\n                                        <label className=\"text-small text-uppercase\" htmlFor=\"Fullname\">Full Name:</label>\r\n                                        <input className=\"form-control form-control-lg\" value={fullname} onChange={onChangeName} type=\"text\" placeholder=\"Enter Your Full Name Here!\" />\r\n                                        {fullnameError && <span className=\"text-danger\">* Please Check Your Full Name!</span>}\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 form-group\">\r\n                                        <label className=\"text-small text-uppercase\" htmlFor=\"Email\">Email: </label>\r\n                                        <input className=\"form-control form-control-lg\" value={email} onChange={onChangeEmail} type=\"text\" placeholder=\"Enter Your Email Here!\" />\r\n                                        {emailError && <span className=\"text-danger\">* Please Check Your Email!</span>}\r\n                                        {emailRegex && <span className=\"text-danger\">* Incorrect Email Format</span>}\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 form-group\">\r\n                                        <label className=\"text-small text-uppercase\" htmlFor=\"Phone\">Phone Number: </label>\r\n                                        <input className=\"form-control form-control-lg\" value={phone} onChange={onChangePhone} type=\"text\" placeholder=\"Enter Your Phone Number Here!\" />\r\n                                        {phoneError && <span className=\"text-danger\">* Please Check Your Phone Number!</span>}\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 form-group\">\r\n                                        <label className=\"text-small text-uppercase\" htmlFor=\"Address\">Address: </label>\r\n                                        <input className=\"form-control form-control-lg\" value={address} onChange={onChangeAddress} type=\"text\" placeholder=\"Enter Your Address Here!\" />\r\n                                        {addressError && <span className=\"text-danger\">* Please Check Your Address!</span>}\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 form-group\">\r\n                                        <a className=\"btn btn-dark\" style={{ color: 'white' }} type=\"submit\" onClick={handlerSubmit}>Place order</a>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"text-uppercase mb-4\">Your order</h5>\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        {\r\n                                            carts && carts.map(value => (\r\n                                                <div key={value._id}>\r\n                                                    <li className=\"d-flex align-items-center justify-content-between\">\r\n                                                        <strong className=\"small font-weight-bold\">{value.nameProduct}</strong>\r\n                                                        <span className=\"text-muted small\">${value.priceProduct} x {value.count}</span>\r\n                                                    </li>\r\n                                                    <li className=\"border-bottom my-2\"></li>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                        <li className=\"d-flex align-items-center justify-content-between\">\r\n                                            <strong className=\"text-uppercase small font-weight-bold\">Total</strong>\r\n                                            <span>${total}</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>)}\r\n\r\n                {success && (<section className=\"py-5\">\r\n                    <div className=\"p-5\">\r\n                        <h1>You Have Successfully Ordered!</h1>\r\n                        <p style={{ fontSize: '1.2rem' }}>Please Check Your Email.</p>\r\n                    </div>\r\n                </section>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkout;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Home\\Home.jsx",["184","185","186","187","188","189"],"import React, { useEffect, useState } from 'react';\r\nimport ProductAPI from '../API/ProductAPI';\r\nimport Image from '../Share/img/Image'\r\nimport queryString from 'query-string'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home(props) {\r\n\r\n    const [products, setProducts] = useState([])\r\n\r\n    //Fetch Product\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await ProductAPI.getAPI()\r\n            console.log(response)\r\n\r\n            const data = response.splice(0, 8)\r\n\r\n            setProducts(data)\r\n        }\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"page-holder\">\r\n            <header className=\"header bg-white\">\r\n\r\n                {\r\n                    products && products.map(value => (\r\n                        <div className=\"modal fade show\" id={`product_${value._id}`} key={value._id}>\r\n                            <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-body p-0\">\r\n                                        <div className=\"row align-items-stretch\">\r\n                                            <div className=\"col-lg-6 p-lg-0\">\r\n                                                <img style={{width: '100%'}} className=\"product-view d-block h-100 bg-cover bg-center\" src={value.img1} data-lightbox={`product_${value._id}`} />\r\n                                                <img className=\"d-none\" href={value.img2} />\r\n                                                <img className=\"d-none\" href={value.img3} />\r\n                                            </div>\r\n                                            <div className=\"col-lg-6\">\r\n                                                {/* Để tắt modal phải có class=\"close\" và data-dissmiss=\"modal\" và aria-label=\"Close\" */}\r\n                                                <a className=\"close p-4\" type=\"button\" href=\"#section_product\" data-dismiss=\"modal\" aria-label=\"Close\">×</a>\r\n                                                <div className=\"p-5 my-md-4\">\r\n                                                    <ul className=\"list-inline mb-2\">\r\n                                                        <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                        <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                        <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                        <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                        <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                    </ul>\r\n                                                    <h2 className=\"h4\">{value.name}</h2>\r\n                                                    <p className=\"text-muted\">${value.price}</p>\r\n                                                    <p className=\"text-small mb-4\">Chất liệu: Cotton, Nỉ\r\n\r\nNguồn gốc: Việt Nam\r\n\r\nNơi sản xuất: Tp. HCM\r\n\r\nForm dáng chuẩn, chắc chắn\r\n\r\nThiết kế may thêu tinh tế, sắc sảo hợp thời trang\r\n\r\nKiểu dáng: phù hợp cả nam và nữ. Đa phong cách, gọn nhẹ, năng động\r\n\r\nMùa sử dụng: xuân, hạ, thu, đông thích hợp đi chơi, dã ngoại, du lịch và đi học\r\n\r\nĐối tượng sử dụng: người lớn và trẻ nhỏ</p>\r\n                                                    <div className=\"row align-items-stretch mb-4\">\r\n                                                        <div className=\"col-sm-5 pl-sm-0 fix_addwish\">\r\n                                                            <a className=\"btn btn-dark btn-sm btn-block h-100 d-flex align-items-center justify-content-center px-0\">\r\n                                                            <i className=\"far fa-heart mr-2\"></i>Add Too Wish List</a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                \r\n\r\n                <div className=\"container\">\r\n                    <section className=\"hero pb-3 bg-cover bg-center d-flex align-items-center\" style={{ backgroundImage: `url(${Image.banner})` }}>\r\n                        <div className=\"container py-5\">\r\n                            <div className=\"row px-4 px-lg-5\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <p className=\"text-muted small text-uppercase mb-2\">New Inspiration 2020</p>\r\n                                    <h1 className=\"h2 text-uppercase mb-3\">20% off on new season</h1><a className=\"btn btn-dark\" href=\"shop.html\">Browse collections</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"pt-5\">\r\n                        <header className=\"text-center\">\r\n                            <p className=\"small text-muted small text-uppercase mb-1\">Carefully created collections</p>\r\n                            <h2 className=\"h5 text-uppercase mb-4\">Browse our categories</h2>\r\n                        </header>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 mb-4 mb-md-0\">\r\n                                <Link className=\"category-item\" to={'/shop'}>\r\n                                    <img className=\"img-fluid\" src={Image.img1} alt=\"\" />\r\n                                    <strong className=\"category-item-title\">Clothes</strong>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-md-4 mb-4 mb-md-0\">\r\n                                <Link className=\"category-item mb-4\" to={'/shop'}>\r\n                                    <img className=\"img-fluid\" src={Image.img2} alt=\"\" />\r\n                                    <strong className=\"category-item-title\">Shoes</strong>\r\n                                </Link>\r\n                                <Link className=\"category-item\" to={'/shop'}>\r\n                                    <img className=\"img-fluid\" src={Image.img3} alt=\"\" />\r\n                                    <strong className=\"category-item-title\">Watches</strong>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <Link className=\"category-item\" to={'/shop'}>\r\n                                    <img className=\"img-fluid\" src={Image.img4} alt=\"\" />\r\n                                    <strong className=\"category-item-title\">Electronics</strong>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"py-5\" id=\"section_product\">\r\n                        <header>\r\n                            <p className=\"small text-muted small text-uppercase mb-1\">Made the hard way</p>\r\n                            <h2 className=\"h5 text-uppercase mb-4\">Top trending products</h2>\r\n                        </header>\r\n                        <div className=\"row\">\r\n                            {\r\n                                products && products.map(value => (\r\n                                    <div className=\"col-xl-3 col-lg-4 col-sm-6\" key={value._id}>\r\n                                        <div className=\"product text-center\">\r\n                                            <div className=\"position-relative mb-3\">\r\n                                                <div className=\"badge text-white badge-\"></div>\r\n                                                <Link className=\"d-block\" to={`/detail/${value._id}`}>\r\n                                                    <img className=\"img-fluid w-100\" src={value.img1} alt=\"...\" />\r\n                                                </Link>\r\n                                                <div className=\"product-overlay\">\r\n                                                    <ul className=\"mb-0 list-inline\">\r\n                                                        <li className=\"list-inline-item m-0 p-0\"><a className=\"btn btn-sm btn-outline-dark\" href=\"#\"><i className=\"far fa-heart\"></i></a></li>\r\n                                                        <li className=\"list-inline-item m-0 p-0\">\r\n                                                            <Link className=\"btn btn-sm btn-dark\" to={`/detail/${value._id}`}>\r\n                                                                Add to cart\r\n                                                            </Link>\r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item mr-0\">\r\n                                                            {/* Dùng Modal phải có href để nó hiện ra thằng đó và thuộc tính data-toggle=\"modal\" để mở modal*/}\r\n                                                            <a className=\"btn btn-sm btn-outline-dark\" href={`#product_${value._id}`} data-toggle=\"modal\">\r\n                                                                <i className=\"fas fa-expand\"></i>\r\n                                                            </a>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h6> <a className=\"reset-anchor\" href=\"detail.html\">{value.name}</a></h6>\r\n                                            <p className=\"small text-muted\">${value.price}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"py-5 bg-light\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row text-center\">\r\n                                <div className=\"col-lg-4 mb-3 mb-lg-0\">\r\n                                    <div className=\"d-inline-block\">\r\n                                        <div className=\"media align-items-end\">\r\n                                            <svg className=\"svg-icon svg-icon-big svg-icon-light\">\r\n                                                <use xlinkHref=\"#delivery-time-1\"></use>\r\n                                            </svg>\r\n                                            <div className=\"media-body text-left ml-3\">\r\n                                                <h6 className=\"text-uppercase mb-1\">Free shipping</h6>\r\n                                                <p className=\"text-small mb-0 text-muted\">Free shipping worlwide</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-4 mb-3 mb-lg-0\">\r\n                                    <div className=\"d-inline-block\">\r\n                                        <div className=\"media align-items-end\">\r\n                                            <svg className=\"svg-icon svg-icon-big svg-icon-light\">\r\n                                                <use xlinkHref=\"#helpline-24h-1\"> </use>\r\n                                            </svg>\r\n                                            <div className=\"media-body text-left ml-3\">\r\n                                                <h6 className=\"text-uppercase mb-1\">24 x 7 service</h6>\r\n                                                <p className=\"text-small mb-0 text-muted\">Free shipping worlwide</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-4\">\r\n                                    <div className=\"d-inline-block\">\r\n                                        <div className=\"media align-items-end\">\r\n                                            <svg className=\"svg-icon svg-icon-big svg-icon-light\">\r\n                                                <use xlinkHref=\"#label-tag-1\"> </use>\r\n                                            </svg>\r\n                                            <div className=\"media-body text-left ml-3\">\r\n                                                <h6 className=\"text-uppercase mb-1\">Festival offer</h6>\r\n                                                <p className=\"text-small mb-0 text-muted\">Free shipping worlwide</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"py-5\">\r\n                        <div className=\"container p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 mb-3 mb-lg-0\">\r\n                                    <h5 className=\"text-uppercase\">Let's be friends!</h5>\r\n                                    <p className=\"text-small text-muted mb-0\">Nisi nisi tempor consequat laboris nisi.</p>\r\n                                </div>\r\n                                <div className=\"col-lg-6\">\r\n                                    <form action=\"#\">\r\n                                        <div className=\"input-group flex-column flex-sm-row mb-3\">\r\n                                            <input className=\"form-control form-control-lg py-3\" type=\"email\" placeholder=\"Enter your email address\" aria-describedby=\"button-addon2\" />\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn btn-dark btn-block\" id=\"button-addon2\" type=\"submit\">Subscribe</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Detail\\Detail.jsx",["190","191","192","193","194","195","196","197","198","199","200"],"import React, { useEffect, useState } from 'react';\r\nimport ProductAPI from '../API/ProductAPI';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport alertify from 'alertifyjs'\r\nimport { addCart } from '../Redux/Action/ActionCart';\r\nimport CartAPI from '../API/CartAPI';\r\nimport queryString from 'query-string'\r\nimport CommentAPI from '../API/CommentAPI';\r\n\r\nfunction Detail(props) {\r\n\r\n    const [detail, setDetail] = useState({})\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //id params cho từng sản phẩm\r\n    const { id } = useParams()\r\n\r\n    //id_user được lấy từ redux\r\n    const id_user = useSelector(state => state.Cart.id_user)\r\n\r\n    //listCart được lấy từ redux\r\n    const listCart = useSelector(state => state.Cart.listCart)\r\n\r\n    const [product, setProduct] = useState([])\r\n\r\n    const [star, setStar] = useState(1)\r\n\r\n    const [comment, setComment] = useState('')\r\n\r\n    // id_user đã đăng nhập\r\n    const idUser = useSelector(state => state.Session.idUser)\r\n\r\n    // Listcomment\r\n    const [list_comment, set_list_comment] = useState([])\r\n\r\n    // state này dùng để load lại comment khi user gửi comment lên\r\n    const [load_comment, set_load_comment] = useState(false)\r\n\r\n    // Hàm này dùng để lấy dữ liệu comment\r\n    // Hàm này sẽ chạy lại phụ thuộc vào id Param\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const params = {\r\n                idProduct: id\r\n            }\r\n\r\n            const query = '?' + queryString.stringify(params)\r\n\r\n            const response = await CommentAPI.getCommentProduct(query)\r\n            console.log(response)\r\n\r\n            set_list_comment(response)\r\n\r\n        }\r\n\r\n        fetchData()\r\n\r\n    }, [id])\r\n\r\n\r\n    // Hàm thay đổi sao đánh giá\r\n    const onChangeStar = (e) => {\r\n\r\n        setStar(e.target.value)\r\n        \r\n    }\r\n\r\n    // Hàm thay đổi comment\r\n    const onChangeComment = (e) => {\r\n\r\n        setComment(e.target.value)\r\n\r\n    }\r\n\r\n    // Hàm này dùng để bình luận\r\n    const handlerComment = () => {\r\n\r\n        if (idUser === ''){\r\n            alertify.set('notifier','position', 'bottom-left');\r\n            alertify.error('Vui Lòng Kiểm Tra Đăng Nhập!');\r\n            return\r\n        }\r\n\r\n        const fetchSendComment = async () => {\r\n\r\n            const params = {\r\n                idProduct: id,\r\n                idUser: sessionStorage.getItem('id_user'),\r\n                fullname: sessionStorage.getItem('name_user'),\r\n                content: comment,\r\n                star: star\r\n            }\r\n    \r\n            const query = '?' + queryString.stringify(params)\r\n    \r\n            const response = await CommentAPI.postCommentProduct(query)\r\n            console.log(response)\r\n    \r\n            set_load_comment(true)\r\n\r\n        }\r\n\r\n        fetchSendComment()\r\n\r\n        setComment('')\r\n\r\n    }\r\n\r\n\r\n    // Hàm này dùng để load lại dữ liệu comment\r\n    // Phụ thuộc vào state load_comment\r\n    useEffect(() => {\r\n\r\n        if (load_comment){\r\n\r\n            const fetchData = async () => {\r\n\r\n                const params = {\r\n                    idProduct: id\r\n                }\r\n    \r\n                const query = '?' + queryString.stringify(params)\r\n    \r\n                const response = await CommentAPI.getCommentProduct(query)\r\n                console.log(response)\r\n    \r\n                set_list_comment(response)\r\n    \r\n            }\r\n    \r\n            fetchData()\r\n\r\n            set_load_comment(false)\r\n        }\r\n\r\n    }, [load_comment])\r\n\r\n\r\n    //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await ProductAPI.getAPI()\r\n\r\n            const data = response.splice(0, 4)\r\n\r\n            setProduct(data)\r\n\r\n        }\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    //Phần này là để thay đổi số lượng khi mua sản phẩm\r\n    const [text, setText] = useState(1)\r\n    const onChangeText = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n\r\n    //Tăng lên 1 đơn vị\r\n    const upText = () => {\r\n        const value = parseInt(text) + 1\r\n\r\n        setText(value)\r\n    }\r\n\r\n    //Giảm 1 đơn vị\r\n    const downText = () => {\r\n\r\n        const value = parseInt(text) - 1\r\n\r\n        if (value === 0)\r\n            return\r\n\r\n        setText(value)\r\n    }\r\n\r\n    //Hàm này để lấy dữ liệu chi tiết sản phẩm\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await ProductAPI.getDetail(id)\r\n            console.log(response)\r\n            setDetail(response)\r\n\r\n        }\r\n\r\n        fetchData()\r\n\r\n    }, [id])\r\n\r\n\r\n    //Phần này dùng để xem review hay description\r\n    const [review, setReview] = useState('description')\r\n    const handlerReview = (value) => {\r\n        setReview(value)\r\n    }\r\n\r\n\r\n    //Hàm này là Thêm Sản Phẩm\r\n    const addToCart = () => {\r\n\r\n        let id_user_cart = ''\r\n\r\n        if (sessionStorage.getItem('id_user')) {\r\n\r\n            id_user_cart = sessionStorage.getItem('id_user')\r\n\r\n        } else {\r\n\r\n            id_user_cart = id_user\r\n\r\n        }\r\n\r\n        const data = {\r\n            idUser: id_user_cart,\r\n            idProduct: detail._id,\r\n            nameProduct: detail.name,\r\n            priceProduct: detail.price,\r\n            count: text,\r\n            img: detail.img1\r\n        }\r\n\r\n        if (sessionStorage.getItem('id_user')) {\r\n\r\n            console.log(\"Bạn Đã Đăng Nhập!\")\r\n\r\n            const fetchPost = async () => {\r\n\r\n                const params = {\r\n                    idUser: id_user_cart, //sessionStorage.getItem('id_user')\r\n                    idProduct: detail._id, // Lấy idProduct\r\n                    count: text, // Lấy số lượng\r\n                }\r\n\r\n                const query = '?' + queryString.stringify(params)\r\n\r\n                const response = await CartAPI.postAddToCart(query)\r\n\r\n                console.log(response)\r\n\r\n            }\r\n\r\n            fetchPost()\r\n\r\n        } else {\r\n\r\n            const action = addCart(data)\r\n            dispatch(action)\r\n\r\n        }\r\n\r\n        alertify.set('notifier', 'position', 'bottom-left');\r\n        alertify.success('Bạn Đã Thêm Hàng Thành Công!');\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"py-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row mb-5\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"row m-sm-0\">\r\n                            <div className=\"col-sm-2 p-sm-0 order-2 order-sm-1 mt-2 mt-sm-0\">\r\n                                <div className=\"owl-thumbs d-flex flex-row flex-sm-column\" data-slider-id=\"1\">\r\n                                    <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\"><img className=\"w-100\" src={detail.img1} alt=\"...\" /></div>\r\n                                    <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\"><img className=\"w-100\" src={detail.img2} alt=\"...\" /></div>\r\n                                    <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\"><img className=\"w-100\" src={detail.img3} alt=\"...\" /></div>\r\n                                    <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\"><img className=\"w-100\" src={detail.img4} alt=\"...\" /></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div id=\"carouselExampleControls\" className=\"carousel slide col-sm-10 order-1 order-sm-2\" data-ride=\"carousel\">\r\n                                <div className=\"carousel-inner owl-carousel product-slider\">\r\n                                    <div className=\"carousel-item active\">\r\n                                        <img className=\"d-block w-100\" src={detail.img1} alt=\"First slide\" />\r\n                                    </div>\r\n                                    <div className=\"carousel-item\">\r\n                                        <img className=\"d-block w-100\" src={detail.img2} alt=\"Second slide\" />\r\n                                    </div>\r\n                                    <div className=\"carousel-item\">\r\n                                        <img className=\"d-block w-100\" src={detail.img3} alt=\"Third slide\" />\r\n                                    </div>\r\n                                    <div className=\"carousel-item\">\r\n                                        <img className=\"d-block w-100\" src={detail.img4} alt=\"Third slide\" />\r\n                                    </div>\r\n                                </div>\r\n                                <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                                    <span className=\"sr-only\">Previous</span>\r\n                                </a>\r\n                                <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                                    <span className=\"sr-only\">Next</span>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <ul className=\"list-inline mb-2\">\r\n                            <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                            <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                            <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                            <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                            <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                        </ul>\r\n                        <h1>{detail.name}</h1>\r\n                        <p className=\"text-muted lead\">${detail.price}</p>\r\n                        <p className=\"text-small mb-4\">Chất liệu: Cotton, Nỉ\r\n\r\nNguồn gốc: Việt Nam\r\n\r\nNơi sản xuất: Tp. HCM\r\n\r\nForm dáng chuẩn, chắc chắn\r\n\r\nThiết kế may thêu tinh tế, sắc sảo hợp thời trang\r\n\r\nKiểu dáng: phù hợp cả nam và nữ. Đa phong cách, gọn nhẹ, năng động\r\n\r\nMùa sử dụng: xuân, hạ, thu, đông thích hợp đi chơi, dã ngoại, du lịch và đi học\r\n\r\nĐối tượng sử dụng: người lớn và trẻ nhỏ</p>\r\n                        <div className=\"row align-items-stretch mb-4\">\r\n                            <div className=\"col-sm-5 pr-sm-0\">\r\n                                <div className=\"border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white\">\r\n                                    <span className=\"small text-uppercase text-gray mr-4 no-select\">Quantity</span>\r\n                                    <div className=\"quantity\">\r\n                                        <button className=\"dec-btn p-0\" style={{ cursor: 'pointer' }}><i className=\"fas fa-caret-left\" onClick={downText}></i></button>\r\n                                        <input className=\"form-control border-0 shadow-0 p-0\" type=\"text\" value={text} onChange={onChangeText} />\r\n                                        <button className=\"inc-btn p-0\" style={{ cursor: 'pointer' }}><i className=\"fas fa-caret-right\" onClick={upText}></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-3 pl-sm-0\">\r\n                                <a className=\"btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white\"\r\n                                    onClick={addToCart} >Add to cart</a>\r\n                            </div>\r\n                            <a className=\"btn btn-link text-dark p-1 mb-4\" href=\"#\">\r\n                                <i className=\"far fa-heart mr-2\"></i>Add to wish list\r\n                        </a>\r\n                            <br></br>\r\n                            <ul className=\"list-unstyled small d-inline-block\">\r\n                                <li className=\"px-3 py-2 mb-1 bg-white\"><strong className=\"text-uppercase\">SKU:</strong><span className=\"ml-2 text-muted\">039</span></li>\r\n                                <li className=\"px-3 py-2 mb-1 bg-white text-muted\"><strong className=\"text-uppercase text-dark\">Category:</strong><a className=\"reset-anchor ml-2\">{detail.category}s</a></li>\r\n                                <li className=\"px-3 py-2 mb-1 bg-white text-muted\"><strong className=\"text-uppercase text-dark\">Tags:</strong><a className=\"reset-anchor ml-2\">Innovation</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\">Comment:</label>\r\n                    <textarea className=\"form-control\" rows=\"3\" onChange={onChangeComment} value={comment}></textarea>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"d-flex w-25\">\r\n                        <span className=\"mt-2\">Evaluate: </span>\r\n                        &nbsp;\r\n                        &nbsp;\r\n                        <input className=\"form-control w-25\" type=\"number\" min=\"1\" max=\"5\" value={star} onChange={onChangeStar} />\r\n                        &nbsp;\r\n                        &nbsp;\r\n                        <span className=\"mt-2\">Star</span>\r\n                    </div>\r\n                    <div>\r\n                    <a className=\"btn btn-dark btn-sm btn-block px-0 text-white\" \r\n                        style={{width: '12rem', }} onClick={handlerComment}>Send</a>\r\n                    </div>\r\n\r\n                </div>\r\n                <br/>\r\n                <ul className=\"nav nav-tabs border-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a\r\n                            className=\"nav-link fix_comment\"\r\n                            onClick={() => handlerReview('description')}\r\n                            style={review === 'description' ? { backgroundColor: '#383838', color: '#ffffff' } : { color: '#383838' }}>\r\n                            Description</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link fix_comment\"\r\n                            onClick={() => handlerReview('review')}\r\n                            style={review === 'review' ? { backgroundColor: '#383838', color: '#ffffff' } : { color: '#383838' }}>\r\n                            Reviews</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content mb-5\">\r\n                    {\r\n                        review === 'description' ? (\r\n                            <div className=\"tab-pane fade show active\">\r\n                                <div className=\"p-4 p-lg-5 bg-white\">\r\n                                    <h6 className=\"text-uppercase\">Product description </h6>\r\n                                    <p className=\"text-muted text-small mb-0\">Chất liệu: Cotton, Nỉ\r\n\r\nNguồn gốc: Việt Nam\r\n\r\nNơi sản xuất: Tp. HCM\r\n\r\nForm dáng chuẩn, chắc chắn\r\n\r\nThiết kế may thêu tinh tế, sắc sảo hợp thời trang\r\n\r\nKiểu dáng: phù hợp cả nam và nữ. Đa phong cách, gọn nhẹ, năng động\r\n\r\nMùa sử dụng: xuân, hạ, thu, đông thích hợp đi chơi, dã ngoại, du lịch và đi học\r\n\r\nĐối tượng sử dụng: người lớn và trẻ nhỏ</p>\r\n                                </div>\r\n                            </div>\r\n                        ) : (<div className=\"tab-pane fade show active\">\r\n                            <div className=\"p-4 p-lg-5 bg-white\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-8\">\r\n                                        {\r\n                                            list_comment && list_comment.map(value => (\r\n                                                <div className=\"media mb-3\" key={value._id}>\r\n                                                    <img className=\"rounded-circle\" src=\"https://img.icons8.com/color/36/000000/administrator-male.png\" alt=\"\" width=\"50\" />\r\n                                                    <div className=\"media-body ml-3\">\r\n                                                        <h6 className=\"mb-0 text-uppercase\">{value.fullname}</h6>\r\n                                                        <p className=\"small text-muted mb-0 text-uppercase\">dd/mm/yyyy</p>\r\n                                                        <ul className=\"list-inline mb-1 text-xs\">\r\n                                                            <li className=\"list-inline-item m-0\"><i className={value.star1}></i></li>            \r\n                                                            <li className=\"list-inline-item m-0\"><i className={value.star2}></i></li>            \r\n                                                            <li className=\"list-inline-item m-0\"><i className={value.star3}></i></li>            \r\n                                                            <li className=\"list-inline-item m-0\"><i className={value.star4}></i></li>            \r\n                                                            <li className=\"list-inline-item m-0\"><i className={value.star5}></i></li>                    \r\n                                                         </ul>\r\n                                                        <p className=\"text-small mb-0 text-muted\">{value.content}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n                <h2 className=\"h5 text-uppercase mb-4\">Related products</h2>\r\n                <div className=\"row\">\r\n                    {\r\n                        product && product.map(value => (\r\n                            <div className=\"col-lg-3 col-sm-6\" key={value._id}>\r\n                                <div className=\"product text-center skel-loader\">\r\n                                    <div className=\"d-block mb-3 position-relative\">\r\n                                        <Link className=\"d-block\" to={`/detail/${value._id}`}>\r\n                                            <img className=\"img-fluid w-100\" src={value.img1} alt=\"...\" />\r\n                                        </Link>\r\n                                        <div className=\"product-overlay\">\r\n                                            <ul className=\"mb-0 list-inline\">\r\n                                                <li className=\"list-inline-item m-0 p-0\"><a className=\"btn btn-sm btn-outline-dark text-white\"><i className=\"far fa-heart\"></i></a></li>\r\n                                                <li className=\"list-inline-item m-0 p-0\"><a className=\"btn btn-sm btn-dark text-white\">Add to cart</a></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                    <h6> <a className=\"reset-anchor\" href=\"detail.html\">Kui Ye Chen’s AirPods</a></h6>\r\n                                    <p className=\"small text-muted\">$250</p>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Detail;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Cart\\Cart.jsx",["201","202","203"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCart, updateCart } from '../Redux/Action/ActionCart';\r\nimport ListCart from './Component/ListCart';\r\nimport alertify from 'alertifyjs'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport CartAPI from '../API/CartAPI';\r\nimport queryString from 'query-string'\r\n\r\n\r\nfunction Cart(props) {\r\n\r\n    //id_user được lấy từ redux\r\n    const id_user = useSelector(state => state.Cart.id_user)\r\n\r\n    //listCart được lấy từ redux\r\n    const listCart = useSelector(state => state.Cart.listCart)\r\n\r\n    const [cart, setCart] = useState([])\r\n\r\n    const [total, setTotal] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //State dùng để Load dữ liệu từ Redux\r\n    const [loadRedux, setLoadRedux] = useState({\r\n        idProduct: '',\r\n        count: ''\r\n    })\r\n\r\n    //State dùng để Load dữ liệu từ API\r\n    const [loadAPI, setLoadAPI] = useState(false)\r\n\r\n    //Hàm này dùng để Load dữ liệu ở Redux\r\n    //Khi người dùng chưa đăng nhập\r\n    useEffect(() => {\r\n\r\n        const fetchDataRedux = () => {\r\n\r\n            if (!sessionStorage.getItem('id_user')){\r\n                setCart(listCart)\r\n\r\n                getTotal(listCart)\r\n            }\r\n\r\n        }\r\n\r\n        fetchDataRedux()\r\n\r\n    }, [loadRedux])\r\n\r\n    //Hàm này dùng để tính tổng tiền carts\r\n    function getTotal(carts) {\r\n        let sub_total = 0\r\n                \r\n        const sum_total = carts.map(value => {\r\n            return sub_total += parseInt(value.priceProduct) * parseInt(value.count)\r\n        })\r\n\r\n        setTotal(sub_total)\r\n    }\r\n\r\n    //Hàm này dùng để load dữ liệu từ API\r\n    //Khi người dùng đã đăng nhập\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if (sessionStorage.getItem('id_user')){\r\n\r\n                const params = {\r\n                    idUser: sessionStorage.getItem('id_user')\r\n                }\r\n\r\n                const query = '?' + queryString.stringify(params)\r\n\r\n                console.log(query)\r\n\r\n                const response = await CartAPI.getCarts(query)\r\n\r\n                setCart(response)\r\n\r\n                getTotal(response)\r\n\r\n            }\r\n\r\n        }\r\n\r\n        fetchData()\r\n\r\n        setLoadAPI(false)\r\n\r\n    }, [loadAPI])\r\n\r\n\r\n    //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha \r\n    const onDeleteCart = (getUser, getProduct) => {\r\n        console.log( \"idUser: \" + getUser + \", idProduct: \" + getProduct)\r\n\r\n        if (sessionStorage.getItem('id_user')){ // user đã đăng nhập\r\n\r\n            //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\r\n            const fetchDelete = async () => {\r\n\r\n                const params = {\r\n                    idUser: getUser,\r\n                    idProduct: getProduct\r\n                }\r\n\r\n                const query = '?' + queryString.stringify(params)\r\n\r\n                const response = await CartAPI.deleteToCart(query)\r\n                console.log(response)\r\n\r\n            }\r\n\r\n            fetchDelete()\r\n\r\n            //Sau đó thay đổi state loadAPI và load lại hàm useEffect\r\n            setLoadAPI(true)\r\n\r\n            alertify.set('notifier','position', 'bottom-left');\r\n            alertify.error('Bạn Đã Xóa Hàng Thành Công!');\r\n\r\n        }else{ // user chưa đăng nhập\r\n\r\n            //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\r\n            const data = {\r\n                idProduct: getProduct,\r\n                idUser: getUser,\r\n            }\r\n\r\n            //Đưa dữ liệu vào Redux\r\n            const action = deleteCart(data)\r\n            dispatch(action)\r\n\r\n            alertify.set('notifier','position', 'bottom-left');\r\n            alertify.error('Bạn Đã Xóa Hàng Thành Công!');\r\n\r\n            //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\r\n            setLoadRedux({\r\n                idProduct: getProduct,\r\n                count: ''\r\n            })\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha \r\n    const onUpdateCount = (getUser, getProduct, getCount) => {\r\n        console.log(\"Count: \" + getCount + \", idUser: \" + getUser + \", idProduct: \" + getProduct)\r\n\r\n        if (sessionStorage.getItem('id_user')){ // user đã đăng nhập\r\n\r\n            //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\r\n            const fetchPut = async () => {\r\n\r\n                const params = {\r\n                    idUser: getUser,\r\n                    idProduct: getProduct,\r\n                    count: getCount\r\n                }\r\n\r\n                const query = '?' + queryString.stringify(params)\r\n\r\n                const response = await CartAPI.putToCart(query)\r\n                console.log(response)\r\n                \r\n            }\r\n\r\n            fetchPut()\r\n\r\n            //Sau đó thay đổi state loadAPI và load lại hàm useEffect\r\n            setLoadAPI(true)\r\n\r\n            console.log(\"Ban Da Dang Nhap!\")\r\n\r\n            alertify.set('notifier','position', 'bottom-left');\r\n            alertify.success('Bạn Đã Sửa Hàng Thành Công!');\r\n\r\n        }else{\r\n\r\n            //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\r\n            const data = {\r\n                idProduct: getProduct,\r\n                idUser: getUser,\r\n                count: getCount\r\n            }\r\n\r\n            //Đưa dữ liệu vào Redux\r\n            const action = updateCart(data)\r\n            dispatch(action)\r\n\r\n            alertify.set('notifier','position', 'bottom-left');\r\n            alertify.success('Bạn Đã Sửa Hàng Thành Công!');\r\n\r\n            //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\r\n            setLoadRedux({\r\n                idProduct: getProduct,\r\n                count: getCount\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //Hàm này dùng để redirect đến page checkout\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const onCheckout = () => {\r\n        \r\n        if (!sessionStorage.getItem('id_user')){\r\n            alertify.set('notifier','position', 'bottom-left');\r\n            alertify.error('Vui Lòng Kiểm Tra Lại Đăng Nhập!');\r\n            return\r\n        }\r\n\r\n        if (cart.length === 0){\r\n            alertify.set('notifier','position', 'bottom-left');\r\n            alertify.error('Vui Lòng Kiểm Tra Lại Giỏ Hàng!');\r\n            return\r\n        }\r\n        \r\n        setRedirect(true)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <section className=\"py-5 bg-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\r\n                        <div className=\"col-lg-6\">\r\n                            <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\r\n                        </div>\r\n                        <div className=\"col-lg-6 text-lg-right\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\r\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Cart</li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"py-5\">\r\n                <h2 className=\"h5 text-uppercase mb-4\">Shopping cart</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-8 mb-4 mb-lg-0\">\r\n                        \r\n                        <ListCart \r\n                            listCart={cart} \r\n                            onDeleteCart={onDeleteCart} \r\n                            onUpdateCount={onUpdateCount} />\r\n\r\n                        <div className=\"bg-light px-4 py-3\">\r\n                            <div className=\"row align-items-center text-center\">\r\n                                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\r\n                                    <Link className=\"btn btn-link p-0 text-dark btn-sm\" to={`/shop`}>\r\n                                        <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>Continue shopping\r\n                                    </Link>                \r\n                                </div>\r\n                                <div className=\"col-md-6 text-md-right\">\r\n                                    {\r\n                                        redirect && <Redirect to={'/checkout'} />\r\n                                    }\r\n                                    <span className=\"btn btn-outline-dark btn-sm\" onClick={onCheckout}>\r\n                                        Procceed to checkout<i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"text-uppercase mb-4\">Cart total</h5>\r\n                                <ul className=\"list-unstyled mb-0\">\r\n                                    <li className=\"d-flex align-items-center justify-content-between\"><strong className=\"text-uppercase small font-weight-bold\">Subtotal</strong><span className=\"text-muted small\">${total}</span></li>\r\n                                    <li className=\"border-bottom my-2\"></li>\r\n                                    <li className=\"d-flex align-items-center justify-content-between mb-4\"><strong className=\"text-uppercase small font-weight-bold\">Total</strong><span>${total}</span></li>\r\n                                    <li>\r\n                                        <form>\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <input className=\"form-control\" type=\"text\" placeholder=\"Enter your coupon\" />\r\n                                                <button className=\"btn btn-dark btn-sm btn-block\" type=\"submit\"> <i className=\"fas fa-gift mr-2\"></i>Apply coupon</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Reducer\\ReducerRoot.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\SignIn.jsx",["204","205"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport UserAPI from '../API/UserAPI';\r\nimport { addSession } from '../Redux/Action/ActionSession';\r\nimport './Auth.css'\r\nimport queryString from 'query-string'\r\nimport CartAPI from '../API/CartAPI';\r\n\r\nfunction SignIn(props) {\r\n\r\n    //listCart được lấy từ redux\r\n    const listCart = useSelector(state => state.Cart.listCart)\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [errorEmail, setErrorEmail] = useState(false)\r\n    const [emailRegex, setEmailRegex] = useState(false)\r\n    const [errorPassword, setErrorPassword] = useState(false)\r\n    const [checkPush, setCheckPush] = useState(false)\r\n    const [errorLogin, setErrorLogin] = useState(false)\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        setErrorEmail(false);\r\n        setErrorPassword(false);\r\n        setEmailRegex(false);\r\n\r\n        if (!email) {\r\n            setErrorEmail(true);\r\n        } else if (!validateEmail(email)) {\r\n            setEmailRegex(true);\r\n        } else if (!password) {\r\n            setErrorPassword(true)\r\n        } else if (email && validateEmail(email) && password) {\r\n            const body = {\r\n                email,\r\n                password\r\n            }\r\n            const res = await UserAPI.postLogin(body);\r\n            if (res._id) {\r\n                sessionStorage.setItem('id_user', res._id)\r\n                sessionStorage.setItem('name_user', res.fullname)\r\n                const action = addSession(sessionStorage.getItem('id_user'))\r\n                dispatch(action);\r\n                setCheckPush(true);\r\n            } else if (res === 'false') {\r\n                setErrorLogin(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Hàm này dùng để đưa hết tất cả carts vào API của user\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            //Lần đầu sẽ không thực hiện insert được vì addCart = ''\r\n            if (checkPush === true) {\r\n                for (let i = 0; i < listCart.length; i++){\r\n                    //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\r\n                    const params = {\r\n                        idUser: sessionStorage.getItem('id_user'),\r\n                        idProduct: listCart[i].idProduct,\r\n                        count: listCart[i].count\r\n                    }\r\n                    const query = '?' + queryString.stringify(params)\r\n                    const response = await CartAPI.postAddToCart(query)\r\n                    console.log(response)\r\n                }\r\n                history.push('/');\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [checkPush])\r\n\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"container-login100\">\r\n                <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\r\n                    <span className=\"login100-form-title p-b-33\">\r\n                        Sign In\r\n\t\t\t\t\t</span>\r\n\r\n                    <div className=\"d-flex justify-content-center pb-5\">\r\n                        {emailRegex && <span className=\"text-danger\">* Incorrect Email Format</span>}\r\n                        {errorEmail && <span className=\"text-danger\">* Please Check Your Email</span>}\r\n                        {errorPassword && <span className=\"text-danger\">* Please Check Your Password</span>}\r\n                        {errorLogin && <span className=\"text-danger\">* Please Check Your Email or Password</span>}\r\n                    </div>\r\n\r\n\r\n                    <div className=\"wrap-input100 validate-input\" >\r\n                        <input className=\"input100\" type=\"text\" placeholder=\"Email\" value={email} onChange={onChangeEmail} />\r\n                    </div>\r\n\r\n                    <div className=\"wrap-input100 rs1 validate-input\">\r\n                        <input className=\"input100\" type=\"password\" placeholder=\"Password\" value={password} onChange={onChangePassword} />\r\n                    </div>\r\n\r\n                    <div className=\"container-login100-form-btn m-t-20\">\r\n                        <button className=\"login100-form-btn\" onClick={onSubmit}>\r\n                            Sign in\r\n\t\t\t\t\t\t</button>\r\n                    </div>\r\n\r\n                    <div className=\"text-center p-t-45 p-b-4\">\r\n                        <span className=\"txt1\">Create an account?</span>\r\n                        &nbsp;\r\n                        <Link to=\"/signup\" className=\"txt2 hov1\">\r\n                            Sign up\r\n\t\t\t\t\t\t</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\SignUp.jsx",["206","207"],"import React, { useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport UserAPI from '../API/UserAPI';\r\nimport './Auth.css'\r\nimport queryString from 'query-string'\r\nimport MessengerAPI from '../API/MessengerAPI';\r\n\r\nSignUp.propTypes = {\r\n\r\n};\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [fullname, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n\r\n    const [errorEmail, setEmailError] = useState(false)\r\n    const [emailRegex, setEmailRegex] = useState(false)\r\n    const [errorPassword, setPasswordError] = useState(false)\r\n    const [errorFullname, setFullnameError] = useState(false)\r\n    const [errorPhone, setPhoneError] = useState(false)\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const onChangeName = (e) => {\r\n        setFullName(e.target.value)\r\n    }\r\n\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangePhone = (e) => {\r\n        setPhone(e.target.value)\r\n    }\r\n\r\n    const handlerSignUp = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (submitted) return;\r\n\r\n        if (!fullname) {\r\n            setFullnameError(true)\r\n            setEmailError(false)\r\n            setPhoneError(false)\r\n            setPasswordError(false)\r\n            setEmailRegex(false)\r\n            return\r\n        } else {\r\n            setFullnameError(false)\r\n            setPhoneError(false)\r\n            setPasswordError(false)\r\n            setFullnameError(false)\r\n            setEmailRegex(false)\r\n\r\n            if (!email) {\r\n                setFullnameError(false)\r\n                setEmailError(true)\r\n                setPhoneError(false)\r\n                setPasswordError(false)\r\n                return\r\n            } else {\r\n                setEmailError(false)\r\n                setPhoneError(false)\r\n                setPasswordError(false)\r\n                setFullnameError(false)\r\n\r\n                if (!validateEmail(email)) {\r\n                    setEmailRegex(true)\r\n                    setFullnameError(false)\r\n                    setEmailError(false)\r\n                    setPhoneError(false)\r\n                    setPasswordError(false)\r\n                    return\r\n                } else {\r\n                    setEmailRegex(false)\r\n\r\n                    if (!password) {\r\n                        setFullnameError(false)\r\n                        setEmailError(false)\r\n                        setPhoneError(false)\r\n                        setPasswordError(true)\r\n                        return\r\n                    } else {\r\n                        setFullnameError(false)\r\n                        setPhoneError(false)\r\n                        setPasswordError(false)\r\n                        setFullnameError(false)\r\n                        setEmailRegex(false)\r\n  \r\n                        if (!phone) {\r\n                            setFullnameError(false)\r\n                            setEmailError(false)\r\n                            setPhoneError(true)\r\n                            setPasswordError(false)\r\n                        } else {\r\n                            setSubmitted(true);\r\n\r\n                            const fetchSignUp = async () => {\r\n                                const params = {\r\n                                    fullname: fullname,\r\n                                    email: email,\r\n                                    password: password,\r\n                                    phone: phone\r\n                                }\r\n                                const query = '?' + queryString.stringify(params)\r\n                                await UserAPI.postSignUp(query)\r\n                                setSuccess(true)\r\n                            }\r\n                            fetchSignUp()\r\n\r\n                            // Hàm này dùng để tạo các conversation cho user và admin\r\n                            const fetchConversation = async () => {\r\n                                const params = {\r\n                                    email: email,\r\n                                    password: password \r\n                                }\r\n                                const query = '?' + queryString.stringify(params)\r\n                                await MessengerAPI.postConversation(query)\r\n                                history.push('/signin');\r\n                                setSubmitted(false);\r\n                            }\r\n                            fetchConversation()\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"container-login100\">\r\n                <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\r\n                    <span className=\"login100-form-title p-b-33\">\r\n                        Sign Up\r\n\t\t\t\t\t    </span>\r\n                    <div className=\"d-flex justify-content-center pb-5\">\r\n                        {errorFullname && <span className=\"text-danger\">* Please Check Your Full Name!</span>}\r\n                        {errorEmail && <span className=\"text-danger\">* Please Check Your Email!</span>}\r\n                        {emailRegex && <span className=\"text-danger\">* Incorrect Email Format</span>}\r\n                        {errorPassword && <span className=\"text-danger\">* Please Check Your Password!</span>}\r\n                        {errorPhone && <span className=\"text-danger\">* Please Check Your Phone Number!</span>}\r\n                    </div>\r\n                    <div className=\"wrap-input100 validate-input\" >\r\n                        <input className=\"input100\" value={fullname} onChange={onChangeName} type=\"text\" placeholder=\"Full Name\" /> \r\n                    </div>\r\n\r\n                    <div className=\"wrap-input100 rs1 validate-input\" >\r\n                        <input className=\"input100\" value={email} onChange={onChangeEmail} type=\"text\" placeholder=\"Email\" />\r\n                    </div>\r\n\r\n                    <div className=\"wrap-input100 rs1 validate-input\">\r\n                        <input className=\"input100\" value={password} onChange={onChangePassword} type=\"password\" placeholder=\"Password\" />\r\n                    </div>\r\n\r\n                    <div className=\"wrap-input100 rs1 validate-input\">\r\n                        <input className=\"input100\" value={phone} onChange={onChangePhone} type=\"text\" placeholder=\"Phone\" />\r\n                    </div>\r\n\r\n                    <div className=\"container-login100-form-btn m-t-20\">\r\n                        <button className=\"login100-form-btn\" onClick={handlerSignUp}>\r\n                            Sign Up\r\n\t\t\t\t\t\t</button>\r\n                    </div>\r\n\r\n                    <div className=\"text-center p-t-45 p-b-4\">\r\n                        <span className=\"txt1\">Login?</span>\r\n                        &nbsp;\r\n                        <Link to=\"/signin\" className=\"txt2 hov1\">\r\n                           Click\r\n\t\t\t\t\t\t</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\Header\\Header.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\Footer\\Footer.jsx",["208","209","210","211","212","213","214","215","216","217","218","219","220"],"import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className=\"bg-dark text-white\">\r\n            <div className=\"container py-4\">\r\n                <div className=\"row py-5\">\r\n                    <div className=\"col-md-4 mb-3 mb-md-0\">\r\n                        <h6 className=\"text-uppercase mb-3\">Customer services</h6>\r\n                        <ul className=\"list-unstyled mb-0\">\r\n                            <li><a className=\"footer-link\" href=\"#\">Help &amp; Contact Us</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Returns &amp; Refunds</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Online Stores</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Terms &amp; Conditions</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3 mb-md-0\">\r\n                        <h6 className=\"text-uppercase mb-3\">Company</h6>\r\n                        <ul className=\"list-unstyled mb-0\">\r\n                            <li><a className=\"footer-link\" href=\"#\">What We Do</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Available Services</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Latest Posts</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">FAQs</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <h6 className=\"text-uppercase mb-3\">Social media</h6>\r\n                        <ul className=\"list-unstyled mb-0\">\r\n                            <li><a className=\"footer-link\" href=\"#\">Twitter</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Instagram</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Tumblr</a></li>\r\n                            <li><a className=\"footer-link\" href=\"#\">Pinterest</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"border-top pt-4\" style={{ borderColor: '#1d1d1d !important' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <p className=\"small text-muted mb-0\">&copy; 2023 All rights reserved.</p>\r\n                        </div>\r\n                        <div className=\"col-lg-6 text-lg-right\">\r\n                            <p className=\"small text-muted mb-0\">Template designed by <a className=\"text-white reset-anchor\" href=\"#\">Tran Lich</a></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Shop.jsx",["221","222","223","224","225","226","227"],"import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string'\r\nimport ProductAPI from '../API/ProductAPI';\r\nimport Search from './Component/Search';\r\nimport Pagination from './Component/Pagination';\r\nimport Products from './Component/Products';\r\nimport SortProduct from './Component/SortProduct';\r\n\r\nfunction Shop(props) {\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [temp, setTemp] = useState([])\r\n\r\n    //state dùng để sắp xếp sản phẩm\r\n    const [sort, setSort] = useState('default')\r\n\r\n    //Tổng số trang\r\n    const [totalPage, setTotalPage] = useState()\r\n\r\n    //Từng trang hiện tại\r\n    const [pagination, setPagination] = useState({\r\n        page: '1',\r\n        count: '9',\r\n        // search: '',\r\n        category: 'all'\r\n    })\r\n\r\n    // state categories\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    //Hàm nà dùng để lấy value từ component SortProduct truyền lên\r\n    const handlerChangeSort = (value) => {\r\n        setSort(value)\r\n    }\r\n\r\n\r\n    //Hàm này dùng để thay đổi state pagination.page\r\n    //Nó sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\r\n    const handlerChangePage = (value) => {\r\n        console.log(\"Value: \", value)\r\n\r\n        //Sau đó set lại cái pagination để gọi chạy làm useEffect gọi lại API pagination\r\n        setPagination({\r\n            page: value,\r\n            count: pagination.count,\r\n            // search: pagination.search,\r\n            category: pagination.category\r\n        })\r\n    }\r\n\r\n    //Hàm này dùng để thay đổi state pagination.search\r\n    //Hàm này sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\r\n    const handlerSearch = (value) => {\r\n        if (!value) {\r\n            setProducts(temp);\r\n            return;\r\n        }\r\n        const searchProducts = temp.filter(item => item.name.toUpperCase().indexOf(value.toUpperCase()) !== -1);\r\n        setProducts(searchProducts)\r\n    }\r\n\r\n    //Hàm này dùng để thay đổi state pagination.category\r\n    const handlerCategory = (value) => {\r\n        console.log(\"Value: \", value)\r\n\r\n        setPagination({\r\n            page: pagination.page,\r\n            count: pagination.count,\r\n            // search: pagination.search,\r\n            category: value\r\n        })\r\n    }\r\n\r\n    //Gọi hàm useEffect tìm tổng số sản phẩm để tính tổng số trang\r\n    //Và nó phụ thuộc và state pagination\r\n    useEffect(() => {\r\n        const fetchAllData = async () => {\r\n            let productLength = 0;\r\n            // Nếu mà category === 'all' thì nó sẽ gọi hàm get tất cả sản phẩm\r\n            // Ngược lại thì nó sẽ gọi hàm pagination và phân loại sản phẩm\r\n            const params = {\r\n                page: pagination.page,\r\n                count: pagination.count,\r\n                // search: pagination.search,\r\n                category: pagination.category\r\n            }\r\n\r\n            const query = queryString.stringify(params)\r\n\r\n            const newQuery = '?' + query\r\n\r\n            const { products, total } = await ProductAPI.getPagination(newQuery)\r\n            setProducts(products);\r\n            setTemp(products);\r\n\r\n            //Tính tổng số trang = tổng số sản phẩm / số lượng sản phẩm 1 trang\r\n            const totalPage = Math.ceil(parseInt(total) / parseInt(pagination.count));\r\n            console.log(totalPage);\r\n            setTotalPage(totalPage)\r\n        }\r\n        fetchAllData()\r\n    }, [pagination])\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, [])\r\n\r\n    const fetchCategories = async () => {\r\n        const response = await ProductAPI.getCategories();\r\n        setCategories(response);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <section className=\"py-5 bg-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\r\n                        <div className=\"col-lg-6\">\r\n                            <h1 className=\"h2 text-uppercase mb-0\">Shop</h1>\r\n                        </div>\r\n                        <div className=\"col-lg-6 text-lg-right\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\r\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Shop</li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            {/* -------------Modal Product----------------- */}\r\n            {\r\n                products && products.map(value => (\r\n                    <div className=\"modal fade show\" id={`product_${value._id}`} key={value._id}>\r\n                        <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-body p-0\">\r\n                                    <div className=\"row align-items-stretch\">\r\n                                        <div className=\"col-lg-6 p-lg-0\">\r\n                                            <img style={{ width: '100%' }} className=\"product-view d-block h-100 bg-cover bg-center\" src={value.img1} data-lightbox={`product_${value._id}`} />\r\n                                            <img className=\"d-none\" href={value.img2} />\r\n                                            <img className=\"d-none\" href={value.img3} />\r\n                                        </div>\r\n                                        <div className=\"col-lg-6\">\r\n                                            {/* Để tắt modal phải có class=\"close\" và data-dissmiss=\"modal\" và aria-label=\"Close\" */}\r\n                                            <a className=\"close p-4\" type=\"button\" href=\"#section_product\" data-dismiss=\"modal\" aria-label=\"Close\">×</a>\r\n                                            <div className=\"p-5 my-md-4\">\r\n                                                <ul className=\"list-inline mb-2\">\r\n                                                    <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                    <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                    <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                    <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                    <li className=\"list-inline-item m-0\"><i className=\"fas fa-star small text-warning\"></i></li>\r\n                                                </ul>\r\n                                                <h2 className=\"h4\">{value.name}</h2>\r\n                                                <p className=\"text-muted\">${value.price}</p>\r\n                                                <p className=\"text-small mb-4\">Chất liệu: Cotton, Nỉ\r\n\r\nNguồn gốc: Việt Nam\r\n\r\nNơi sản xuất: Tp. HCM\r\n\r\nForm dáng chuẩn, chắc chắn\r\n\r\nThiết kế may thêu tinh tế, sắc sảo hợp thời trang\r\n\r\nKiểu dáng: phù hợp cả nam và nữ. Đa phong cách, gọn nhẹ, năng động\r\n\r\nMùa sử dụng: xuân, hạ, thu, đông thích hợp đi chơi, dã ngoại, du lịch và đi học\r\n\r\nĐối tượng sử dụng: người lớn và trẻ nhỏ</p>\r\n                                                <div className=\"row align-items-stretch mb-4\">\r\n                                                    <div className=\"col-sm-5 pl-sm-0 fix_addwish\">\r\n                                                        <a className=\"btn btn-dark btn-sm btn-block h-100 d-flex align-items-center justify-content-center px-0\">\r\n                                                            <i className=\"far fa-heart mr-2\"></i>Add Too Wish List</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            {/* -------------Modal Product----------------- */}\r\n\r\n\r\n            <section className=\"py-5\">\r\n                <div className=\"container p-0\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                            <h5 className=\"text-uppercase mb-4\">Categories</h5>\r\n                            <div className=\"py-2 px-4 bg-dark text-white mb-3\"><strong className=\"small text-uppercase font-weight-bold\">Fashion &amp; Acc</strong></div>\r\n                            <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\r\n                                <li className=\"mb-2\"><a className=\"reset-anchor\" href=\"#\" onClick={() => handlerCategory('all')}>All</a></li>\r\n                            </ul>\r\n                            {categories && categories.map((item) => (\r\n                                <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\r\n                                    <li className=\"mb-2\"><a className=\"reset-anchor\" href=\"#\" onClick={() => handlerCategory(item?._id)}>{item?.category}</a></li>\r\n                                </ul>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"col-lg-9 order-1 order-lg-2 mb-5 mb-lg-0\">\r\n                            <div className=\"row mb-3 align-items-center\">\r\n\r\n                                {/* ------------------Search----------------- */}\r\n                                <Search handlerSearch={handlerSearch} />\r\n                                {/* ------------------Search----------------- */}\r\n\r\n                                <div className=\"col-lg-8\">\r\n                                    <ul className=\"list-inline d-flex align-items-center justify-content-lg-end mb-0\">\r\n                                        <li className=\"list-inline-item\">\r\n                                            <SortProduct handlerChangeSort={handlerChangeSort} />\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Products products={products} sort={sort} />\r\n\r\n                            <Pagination pagination={pagination} handlerChangePage={handlerChangePage} totalPage={totalPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Shop;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\Chat\\Chat.jsx",["228","229","230","231","232","233"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport './Chat.css'\r\nimport queryString from 'query-string'\r\n\r\nimport MessengerAPI from '../../API/MessengerAPI';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// import io from \"socket.io-client\";\r\n// const socket = io(\"http://localhost:8000\", {\r\n//     withCredentials: true,\r\n//     extraHeaders: {\r\n//       \"my-custom-header\": \"abcd\"\r\n//     }\r\n// });\r\n\r\nfunction Chat(props) {\r\n\r\n    const [activeChat, setActiveChat] = useState(false)\r\n\r\n    const [textMessage, setTextMessage] = useState('')\r\n\r\n    const [message, setMessage] = useState()\r\n\r\n    const id_admin = '5ff808424e24e9118cee77b2'\r\n\r\n    //Get id_user từ redux khi user đã đăng nhập\r\n    const id_user = useSelector(state => state.Session.idUser)\r\n\r\n    const [loadMessage, setLoadMessage] = useState('')\r\n\r\n    const [load, setLoad] = useState(false)\r\n\r\n    const timeRef = useRef(null);\r\n\r\n    // Hàm này dùng để mở hộp thoại chat\r\n    const onChat = () => {\r\n        setActiveChat(!activeChat)\r\n    }\r\n\r\n    const onChangeText = (e) => {\r\n\r\n        setTextMessage(e.target.value)\r\n\r\n    }\r\n\r\n    // Hàm này là thay đổi state loadMessage phụ thuộc vào redux id_user\r\n    // Nhầm mục đích để gọi lại hàm useEffect loadmessage\r\n    useEffect(() => {\r\n        if (!id_user) {\r\n            setLoadMessage('')\r\n        } else {\r\n            setLoadMessage(id_user)\r\n        }\r\n    }, [id_user])\r\n\r\n\r\n    const handlerSend = () => {\r\n        //Khi gửi tin nhắn thì nó sẽ lấy id của cả 2 người\r\n        //Với cái key category có value là send\r\n        //Vì là gửi tin nhắn\r\n        const data = {\r\n            id_user1: id_user,\r\n            id_user2: id_admin,\r\n            id: Math.random().toString(),\r\n            message: textMessage,\r\n            name: sessionStorage.getItem('name_user'),\r\n            category: \"send\"\r\n        }\r\n\r\n        const data_partner = {\r\n            id_user1: id_admin,\r\n            id_user2: id_user,\r\n            id: Math.random().toString(),\r\n            message: textMessage,\r\n            name: sessionStorage.getItem('name_user'),\r\n            category: \"receive\"\r\n        };\r\n\r\n        //Sau đó nó emit dữ liệu lên server bằng socket với key send_message và value data\r\n        // socket.emit('send_message', data)\r\n\r\n        //Tiếp theo nó sẽ postdata lên api đưa dữ liệu vào database\r\n        const postData = async () => {\r\n\r\n            const query = '?' + queryString.stringify(data);\r\n            const query_partner = '?' + queryString.stringify(data_partner);\r\n\r\n\r\n            await MessengerAPI.postMessage(query);\r\n            const res = await MessengerAPI.postMessage(query_partner);\r\n\r\n            //Sau đó gọi hàm setLoad để useEffect lấy lại dữ liệu sau khi update\r\n            if (res) {\r\n                setLoad(true);\r\n            }\r\n        }\r\n\r\n        postData()\r\n\r\n        setTextMessage('')\r\n\r\n    }\r\n\r\n    // Hàm này dùng để load dữ liệu message của user khi user gửi tin nhán\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchMessageData();\r\n            setLoad(false)\r\n        }\r\n    }, [load])\r\n\r\n    const fetchMessageData = async () => {\r\n        const params = {\r\n            id_user1: id_user,\r\n            id_user2: id_admin\r\n        }\r\n        const query = '?' + queryString.stringify(params)\r\n        const response = await MessengerAPI.getMessage(query)\r\n        setMessage(response.content);\r\n        if (response) {\r\n            return true;\r\n        }\r\n    };\r\n\r\n\r\n    // Hàm này dùng để load dữ liệu message của user\r\n    // Phụ thuộc state loadMessage\r\n    useEffect(() => {\r\n        if (loadMessage) {\r\n            const fetchData = async () => {\r\n                const params = {\r\n                    id_user1: id_user,\r\n                    id_user2: id_admin\r\n                }\r\n                const query = '?' + queryString.stringify(params)\r\n                const response = await MessengerAPI.getMessage(query)\r\n                setMessage(response.content)\r\n            }\r\n            fetchData()\r\n        }\r\n    }, [loadMessage])\r\n\r\n\r\n    //Hàm này dùng để nhận socket từ server gửi lên\r\n    // useEffect(() => {\r\n\r\n    //     //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_message\r\n    //     socket.on('receive_message', (data) => {\r\n\r\n    //         //Sau đó nó sẽ setLoad gọi lại hàm useEffect lấy lại dữ liệu\r\n    //         setLoad(true)\r\n\r\n    //     })\r\n\r\n    // }, [])\r\n\r\n    const handlePollingMessage = () => {\r\n        timeRef.current = setTimeout(async () => {\r\n            const flag = await fetchMessageData();\r\n            if (flag && activeChat) {\r\n                handlePollingMessage();\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activeChat) {\r\n            handlePollingMessage();\r\n        } else {\r\n            clearTimeout(timeRef.current);\r\n        }\r\n    }, [activeChat])\r\n\r\n\r\n    return (\r\n        <>\r\n            {id_user &&\r\n                <div>\r\n                    <div className=\"wrapper_chat\">\r\n                        <div className=\"chat_messenger\" onClick={onChat}>\r\n                            <svg x=\"0\" y=\"0\" width=\"60px\" height=\"60px\"><g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                                <g>\r\n                                    <circle fill=\"#383838\" cx=\"30\" cy=\"30\" r=\"30\"></circle>\r\n                                    <svg x=\"10\" y=\"10\">\r\n                                        <g transform=\"translate(0.000000, -10.000000)\" fill=\"#FFFFFF\">\r\n                                            <g id=\"logo\" transform=\"translate(0.000000, 10.000000)\">\r\n                                                <path d=\"M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \r\n                                        20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \r\n                                        13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \r\n                                        C6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \r\n                                        20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \r\n                                        C16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \r\n                                        25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \r\n                                        30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \r\n                                        L18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z\">\r\n                                                </path>\r\n                                            </g>\r\n                                        </g>\r\n                                    </svg>\r\n                                </g>\r\n                            </g>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        activeChat && (\r\n                            <div className='active_chat animate__animated animate__jackInTheBox'>\r\n                                <div style={{ width: '100%' }}>\r\n                                    <div className=\"card card-bordered fix_boderChat\">\r\n                                        <div className=\"card-header\">\r\n                                            <h4 className=\"card-title\"><strong>Customer Support</strong></h4> <a className=\"btn btn-xs btn-secondary\" href=\"#\">Let's Chat App</a>\r\n                                        </div>\r\n                                        <div className=\"ps-container ps-theme-default ps-active-y fix_scoll\">\r\n                                            {\r\n                                                message && message.map(value => (\r\n                                                    value.category === 'send' ? (\r\n                                                        <div className=\"media media-chat media-chat-reverse\" key={value.id}>\r\n                                                            <div className=\"media-body\">\r\n                                                                <p>{value.message}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ) : (\r\n                                                        <div className=\"media media-chat\" key={value.id}> <img className=\"avatar\" src=\"https://img.icons8.com/color/36/000000/administrator-male.png\" alt=\"...\" />\r\n                                                            <div className=\"media-body\" key={value.id}>\r\n                                                                <p>ADMIN: {value.message}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"publisher bt-1 border-light\">\r\n                                            <img className=\"avatar avatar-xs\" src=\"https://img.icons8.com/color/36/000000/administrator-male.png\" alt=\"...\" />\r\n                                            <input type=\"text\" placeholder=\"Enter Message!\" onChange={onChangeText} value={textMessage} />\r\n                                            <span className=\"publisher-btn file-group\">\r\n                                                <i className=\"fa fa-paperclip file-browser\"></i>\r\n                                                <input type=\"file\" />\r\n                                            </span>\r\n                                            <a className=\"publisher-btn\" href=\"#\" data-abc=\"true\">\r\n                                                <i className=\"fa fa-smile\"></i>\r\n                                            </a>\r\n                                            <a onClick={handlerSend} className=\"publisher-btn text-info\" data-abc=\"true\">\r\n                                                <i className=\"fa fa-paper-plane\"></i>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Reducer\\ReducerSession.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\LoginLink.jsx",["234","235","236"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { deleteSession } from '../Redux/Action/ActionSession';\r\n\r\n\r\nfunction LoginLink(props) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onRedirect = () => {\r\n\r\n        sessionStorage.clear()\r\n\r\n        const action = deleteSession('')\r\n        dispatch(action)\r\n\r\n    }\r\n\r\n    return (\r\n        <li className=\"nav-item\" onClick={onRedirect}>\r\n            <Link className=\"nav-link\" to=\"/signin\">\r\n                ( Logout )\r\n            </Link>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default LoginLink;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\LogoutLink.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\History\\Component\\MainHistory.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\UserAPI.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\ProductAPI.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\CartAPI.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\CheckoutAPI.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\MessengerAPI.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\CommentAPI.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Action\\ActionSession.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Action\\ActionCart.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\History\\Component\\DetailHistory.jsx",["237"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport HistoryAPI from '../../API/HistoryAPI';\r\n\r\nfunction DetailHistory(props) {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [cart, setCart] = useState([])\r\n\r\n    const [information, setInformation] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await HistoryAPI.getDetail(id)\r\n            console.log(response.cart)\r\n\r\n            setCart(response.cart)\r\n\r\n            console.log(response)\r\n\r\n            setInformation(response)\r\n\r\n        }\r\n\r\n        fetchData()\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <section className=\"py-5 bg-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\r\n                        <div className=\"col-lg-6\">\r\n                            <h1 className=\"h2 text-uppercase mb-0\">Detail Order</h1>\r\n                        </div>\r\n                        <div className=\"col-lg-6 text-lg-right\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\r\n                                    <li className=\"breadcrumb-item active\">Detail</li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <div className=\"p-5\">\r\n                <h1 className=\"h2 text-uppercase\">Information Order</h1>\r\n                <p>ID User: {information.idUser}</p>\r\n                <p>Full Name: {information.fullname}</p>\r\n                <p>Phone: {information.phone}</p>\r\n                <p>Address: {information.address}</p>\r\n                <p>Total: {information.total}$</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"table-responsive pt-5 pb-5\">\r\n                <table className=\"table\">\r\n                    <thead className=\"bg-light\">\r\n                        <tr className=\"text-center\">\r\n                            <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">ID Product</strong></th>\r\n                            <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Image</strong></th>\r\n                            <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Name</strong></th>\r\n                            <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Price</strong></th>\r\n                            <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Count</strong></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            cart && cart.map((value) => (\r\n                                <tr className=\"text-center\" key={value.idProduct}>\r\n                                    <td className=\"align-middle border-0\">\r\n                                        <h6 className=\"mb-0\">{value.idProduct}</h6>\r\n                                    </td>\r\n                                    <td className=\"pl-0 border-0\">\r\n                                        <div className=\"media align-items-center justify-content-center\">\r\n                                            <Link className=\"reset-anchor d-block animsition-link\" to={`/detail/${value.idProduct}`}>\r\n                                                <img src={value.img} alt=\"...\" width=\"200\" />\r\n                                            </Link>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td className=\"align-middle border-0\">\r\n                                        <h6 className=\"mb-0\">{value.nameProduct}</h6>\r\n                                    </td>\r\n                                    <td className=\"align-middle border-0\">\r\n                                        <h6 className=\"mb-0\">{value.priceProduct}</h6>\r\n                                    </td>\r\n                                    <td className=\"align-middle border-0\">\r\n                                        <h6 className=\"mb-0\">{value.count}</h6>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailHistory;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Cart\\Component\\ListCart.jsx",["238","239"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nListCart.propTypes = {\r\n    listCart: PropTypes.array,\r\n    onDeleteCart: PropTypes.func,\r\n    onUpdateCount: PropTypes.func\r\n};\r\n\r\nListCart.defaultProps = {\r\n    listCart: [],\r\n    onDeleteCart: null,\r\n    onUpdateCount: null\r\n}\r\n\r\nfunction ListCart(props) {\r\n\r\n    const { listCart, onDeleteCart, onUpdateCount } = props\r\n\r\n    const handlerChangeText = (e) => {\r\n\r\n        console.log(e.target.value)\r\n\r\n    }\r\n\r\n    const handlerDelete = (getUser, getProduct) => {\r\n\r\n        if (!onDeleteCart){\r\n            return\r\n        }\r\n\r\n        onDeleteCart(getUser, getProduct)\r\n    }\r\n\r\n    const handlerDown = (getIdUser, getIdProduct, getCount) => {\r\n\r\n        if (!onUpdateCount){\r\n            return\r\n        }\r\n\r\n        if (getCount === 1){\r\n            return\r\n        }\r\n\r\n        //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\r\n        const updateCount = parseInt(getCount) - 1\r\n\r\n        onUpdateCount(getIdUser, getIdProduct, updateCount)\r\n\r\n    }\r\n\r\n    const handlerUp = (getIdUser, getIdProduct, getCount) => {\r\n\r\n        if (!onUpdateCount){\r\n            return\r\n        }\r\n\r\n        //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\r\n        const updateCount = parseInt(getCount) + 1\r\n\r\n        onUpdateCount(getIdUser, getIdProduct, updateCount)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-responsive mb-4\">\r\n            <table className=\"table\">\r\n                <thead className=\"bg-light\">\r\n                    <tr className=\"text-center\">\r\n                        <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Image</strong></th>\r\n                        <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Product</strong></th>\r\n                        <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Price</strong></th>\r\n                        <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Quantity</strong></th>\r\n                        <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Total</strong></th>\r\n                        <th className=\"border-0\" scope=\"col\"> <strong className=\"text-small text-uppercase\">Remove</strong></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        listCart && listCart.map((value, index) => (\r\n                            <tr className=\"text-center\" key={index}>\r\n                                <td className=\"pl-0 border-0\">\r\n                                    <div className=\"media align-items-center justify-content-center\">\r\n                                        <Link className=\"reset-anchor d-block animsition-link\" to={`/detail/${value.idProduct}`}>\r\n                                            <img src={value.img} alt=\"...\" width=\"70\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                </td>\r\n                                <td className=\"align-middle border-0\">\r\n                                    <div className=\"media align-items-center justify-content-center\">\r\n                                        <Link className=\"reset-anchor h6 animsition-link\" to={`/detail/${value.idProduct}`}>\r\n                                            {value.nameProduct}\r\n                                        </Link>\r\n                                    </div>\r\n                                </td>\r\n                                \r\n                                <td className=\"align-middle border-0\">\r\n                                    <p className=\"mb-0 small\">${value.priceProduct}</p>\r\n                                </td>\r\n                                <td className=\"align-middle border-0\">\r\n                                        <div className=\"quantity justify-content-center\">\r\n                                            <button className=\"dec-btn p-0\" \r\n                                                style={{ cursor: 'pointer'}}\r\n                                                onClick={() => handlerDown(value.idUser, value.idProduct, value.count)} >\r\n                                                <i className=\"fas fa-caret-left\"></i>\r\n                                            </button>\r\n                                            <input \r\n                                                className=\"form-control form-control-sm border-0 shadow-0 p-0\" \r\n                                                type=\"text\" \r\n                                                value={value.count} \r\n                                                onChange={handlerChangeText}/>\r\n                                            <button className=\"inc-btn p-0\" \r\n                                                style={{ cursor: 'pointer'}}\r\n                                                onClick={() => handlerUp(value.idUser, value.idProduct, value.count)} >\r\n                                                <i className=\"fas fa-caret-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                </td>\r\n                                <td className=\"align-middle border-0\">\r\n                                    <p className=\"mb-0 small\">${parseInt(value.priceProduct) * parseInt(value.count)}</p>\r\n                                </td>\r\n                                <td className=\"align-middle border-0\">\r\n                                    <a \r\n                                        className=\"reset-anchor remove_cart\" \r\n                                        style={{ cursor: 'pointer'}}\r\n                                        onClick={() => handlerDelete(value.idUser, value.idProduct)}>\r\n                                        <i className=\"fas fa-trash-alt small text-muted\"></i></a>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListCart;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Authentication\\Name.jsx",["240"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport UserAPI from '../API/UserAPI';\r\n\r\nfunction Name(props) {\r\n\r\n    const [name, setName] = useState('')\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const response = await UserAPI.getDetailData(sessionStorage.getItem('id_user'))\r\n            setName(response)\r\n        }\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <li className=\"nav-item dropdown\">\r\n            <a \r\n                className=\"nav-link dropdown-toggle\" \r\n                style={{ cursor: 'pointer' }}\r\n                id=\"pagesDropdown\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\" \r\n                aria-expanded=\"false\"\r\n                >\r\n                <i className=\"fas fa-user-alt mr-1 text-gray\"></i>\r\n                {name.fullname}\r\n            </a>\r\n            <div className=\"dropdown-menu mt-3\" aria-labelledby=\"pagesDropdown\">\r\n                <Link className=\"dropdown-item border-0 transition-link\" to={'/manage'}>Manage</Link>\r\n                <Link className=\"dropdown-item border-0 transition-link\" to={'/history'}>History</Link>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Name;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Redux\\Reducer\\ReducerCart.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Share\\img\\Image.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\Products.jsx",["241","242"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nProducts.propTypes = {\r\n    products: PropTypes.array,\r\n    sort: PropTypes.string\r\n};\r\n\r\nProducts.defaultProps = {\r\n    products: [],\r\n    sort: ''\r\n}\r\n\r\nfunction Products(props) {\r\n\r\n    const { products, sort } = props\r\n\r\n    if (sort === 'DownToUp') {\r\n        products.sort((a, b) => {\r\n            return a.price - b.price\r\n        });\r\n    }\r\n    else if (sort === 'UpToDown') {\r\n        products.sort((a, b) => {\r\n            return b.price - a.price\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {/* -------------Product----------------- */}\r\n            {\r\n                products && products.map(value => (\r\n                    <div className=\"col-lg-4 col-sm-6 Section_Category\" key={value._id}>\r\n                        <div className=\"product text-center\">\r\n                            <div className=\"position-relative mb-3\">\r\n                                <div className=\"badge text-white badge-\"></div>\r\n                                <Link className=\"d-block\" to={`/detail/${value._id}`}>\r\n                                    <img className=\"img-fluid w-100\" src={value.img1} alt=\"...\" />\r\n                                </Link>\r\n                                <div className=\"product-overlay\">\r\n                                    <ul className=\"mb-0 list-inline\">\r\n                                        <li className=\"list-inline-item m-0 p-0\"><a className=\"btn btn-sm btn-outline-dark\" href=\"#\"><i className=\"far fa-heart\"></i></a></li>\r\n                                        <li className=\"list-inline-item m-0 p-0\">\r\n                                            <Link className=\"btn btn-sm btn-dark\" to={`/detail/${value._id}`}>\r\n                                                Add to cart\r\n                                                            </Link>\r\n                                        </li>\r\n                                        <li className=\"list-inline-item mr-0\">\r\n                                            {/* Dùng Modal phải có href để nó hiện ra thằng đó và thuộc tính data-toggle=\"modal\" để mở modal*/}\r\n                                            <a className=\"btn btn-sm btn-outline-dark\" href={`#product_${value._id}`} data-toggle=\"modal\">\r\n                                                <i className=\"fas fa-expand\"></i>\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <h6> <a className=\"reset-anchor\" href=\"detail.html\">{value.name}</a></h6>\r\n                            <p className=\"small text-muted\">${value.price}</p>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            {/* -------------Product----------------- */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;","E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\Search.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\Pagination.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\SortProduct.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\HistoryAPI.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\API\\axiosClient.jsx",[],"E:\\DoAn\\source_react\\source_main\\client_shop\\src\\Shop\\Component\\IndexPage.jsx",["243"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nIndexPage.propTypes = {\r\n    indexPage: PropTypes.array,\r\n    handlerChangePage: PropTypes.func,\r\n    pagination: PropTypes.object\r\n};\r\n\r\nIndexPage.defaultProps = {\r\n    indexPage: null,\r\n    handlerChangePage: null,\r\n    pagination: {}\r\n}\r\n\r\nfunction IndexPage(props) {\r\n\r\n    const { indexPage, handlerChangePage, pagination } = props\r\n\r\n    const { page } = pagination\r\n\r\n    const onIndexPage = (value) => {\r\n\r\n        if (!handlerChangePage){\r\n            return\r\n        }\r\n\r\n        handlerChangePage(value)\r\n\r\n    }\r\n\r\n    console.log(indexPage)\r\n\r\n    return (\r\n        <div className=\"d-flex\">\r\n            {\r\n                indexPage && indexPage.map(value => (\r\n                    <li className={value === parseInt(page) ? 'page-item active' : 'page-item'} \r\n                        key={value} \r\n                        onClick={() => onIndexPage(value)}>\r\n\r\n                        <a className=\"page-link\">{value}</a>\r\n\r\n                    </li>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndexPage;",["244","245"],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":72,"column":15,"nodeType":"252","messageId":"253","endLine":72,"endColumn":24},{"ruleId":"254","severity":1,"message":"255","line":181,"column":8,"nodeType":"256","endLine":181,"endColumn":14,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":262,"column":41,"nodeType":"260","endLine":262,"endColumn":134},{"ruleId":"250","severity":1,"message":"261","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":19},{"ruleId":"262","severity":1,"message":"263","line":41,"column":49,"nodeType":"260","endLine":41,"endColumn":194},{"ruleId":"262","severity":1,"message":"263","line":42,"column":49,"nodeType":"260","endLine":42,"endColumn":93},{"ruleId":"262","severity":1,"message":"263","line":43,"column":49,"nodeType":"260","endLine":43,"endColumn":93},{"ruleId":"258","severity":1,"message":"259","line":75,"column":61,"nodeType":"260","endLine":75,"endColumn":166},{"ruleId":"258","severity":1,"message":"264","line":148,"column":98,"nodeType":"260","endLine":148,"endColumn":150},{"ruleId":"250","severity":1,"message":"265","line":24,"column":11,"nodeType":"252","messageId":"253","endLine":24,"endColumn":19},{"ruleId":"254","severity":1,"message":"266","line":140,"column":8,"nodeType":"256","endLine":140,"endColumn":22,"suggestions":"267"},{"ruleId":"258","severity":1,"message":"259","line":343,"column":33,"nodeType":"260","endLine":344,"endColumn":58},{"ruleId":"258","severity":1,"message":"264","line":346,"column":29,"nodeType":"260","endLine":346,"endColumn":85},{"ruleId":"258","severity":1,"message":"259","line":352,"column":147,"nodeType":"260","endLine":352,"endColumn":180},{"ruleId":"258","severity":1,"message":"259","line":353,"column":143,"nodeType":"260","endLine":353,"endColumn":176},{"ruleId":"258","severity":1,"message":"259","line":373,"column":21,"nodeType":"260","endLine":374,"endColumn":77},{"ruleId":"258","severity":1,"message":"259","line":381,"column":25,"nodeType":"260","endLine":384,"endColumn":136},{"ruleId":"258","severity":1,"message":"259","line":388,"column":25,"nodeType":"260","endLine":390,"endColumn":131},{"ruleId":"258","severity":1,"message":"259","line":458,"column":90,"nodeType":"260","endLine":458,"endColumn":144},{"ruleId":"258","severity":1,"message":"259","line":459,"column":90,"nodeType":"260","endLine":459,"endColumn":136},{"ruleId":"250","severity":1,"message":"268","line":15,"column":11,"nodeType":"252","messageId":"253","endLine":15,"endColumn":18},{"ruleId":"254","severity":1,"message":"269","line":51,"column":8,"nodeType":"256","endLine":51,"endColumn":19,"suggestions":"270"},{"ruleId":"250","severity":1,"message":"251","line":57,"column":15,"nodeType":"252","messageId":"253","endLine":57,"endColumn":24},{"ruleId":"250","severity":1,"message":"271","line":3,"column":16,"nodeType":"252","messageId":"253","endLine":3,"endColumn":24},{"ruleId":"254","severity":1,"message":"272","line":85,"column":8,"nodeType":"256","endLine":85,"endColumn":19,"suggestions":"273"},{"ruleId":"250","severity":1,"message":"271","line":2,"column":16,"nodeType":"252","messageId":"253","endLine":2,"endColumn":24},{"ruleId":"250","severity":1,"message":"274","line":25,"column":12,"nodeType":"252","messageId":"253","endLine":25,"endColumn":19},{"ruleId":"258","severity":1,"message":"264","line":11,"column":33,"nodeType":"260","endLine":11,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":12,"column":33,"nodeType":"260","endLine":12,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":13,"column":33,"nodeType":"260","endLine":13,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":14,"column":33,"nodeType":"260","endLine":14,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":20,"column":33,"nodeType":"260","endLine":20,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":21,"column":33,"nodeType":"260","endLine":21,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":22,"column":33,"nodeType":"260","endLine":22,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":23,"column":33,"nodeType":"260","endLine":23,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":29,"column":33,"nodeType":"260","endLine":29,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":30,"column":33,"nodeType":"260","endLine":30,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":31,"column":33,"nodeType":"260","endLine":31,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":32,"column":33,"nodeType":"260","endLine":32,"endColumn":69},{"ruleId":"258","severity":1,"message":"264","line":42,"column":87,"nodeType":"260","endLine":42,"endColumn":135},{"ruleId":"250","severity":1,"message":"275","line":78,"column":17,"nodeType":"252","messageId":"253","endLine":78,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":142,"column":45,"nodeType":"260","endLine":142,"endColumn":192},{"ruleId":"262","severity":1,"message":"263","line":143,"column":45,"nodeType":"260","endLine":143,"endColumn":89},{"ruleId":"262","severity":1,"message":"263","line":144,"column":45,"nodeType":"260","endLine":144,"endColumn":89},{"ruleId":"258","severity":1,"message":"259","line":176,"column":57,"nodeType":"260","endLine":176,"endColumn":162},{"ruleId":"258","severity":1,"message":"264","line":199,"column":54,"nodeType":"260","endLine":199,"endColumn":130},{"ruleId":"258","severity":1,"message":"264","line":203,"column":58,"nodeType":"260","endLine":203,"endColumn":138},{"ruleId":"254","severity":1,"message":"276","line":110,"column":8,"nodeType":"256","endLine":110,"endColumn":14,"suggestions":"277"},{"ruleId":"254","severity":1,"message":"278","line":141,"column":8,"nodeType":"256","endLine":141,"endColumn":21,"suggestions":"279"},{"ruleId":"254","severity":1,"message":"280","line":172,"column":8,"nodeType":"256","endLine":172,"endColumn":20,"suggestions":"281"},{"ruleId":"258","severity":1,"message":"264","line":211,"column":111,"nodeType":"260","endLine":211,"endColumn":160},{"ruleId":"258","severity":1,"message":"264","line":239,"column":45,"nodeType":"260","endLine":239,"endColumn":99},{"ruleId":"258","severity":1,"message":"259","line":242,"column":45,"nodeType":"260","endLine":242,"endColumn":122},{"ruleId":"250","severity":1,"message":"282","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},{"ruleId":"250","severity":1,"message":"283","line":1,"column":28,"nodeType":"252","messageId":"253","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"271","line":3,"column":16,"nodeType":"252","messageId":"253","endLine":3,"endColumn":24},{"ruleId":"254","severity":1,"message":"266","line":31,"column":8,"nodeType":"256","endLine":31,"endColumn":10,"suggestions":"284"},{"ruleId":"250","severity":1,"message":"283","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":25},{"ruleId":"258","severity":1,"message":"259","line":124,"column":37,"nodeType":"260","endLine":127,"endColumn":102},{"ruleId":"258","severity":1,"message":"259","line":23,"column":13,"nodeType":"260","endLine":30,"endColumn":18},{"ruleId":"250","severity":1,"message":"282","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"264","line":45,"column":82,"nodeType":"260","endLine":45,"endColumn":134},{"ruleId":"258","severity":1,"message":"259","line":42,"column":25,"nodeType":"260","endLine":42,"endColumn":50},{"ruleId":"246","replacedBy":"285"},{"ruleId":"248","replacedBy":"286"},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'sum_total' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'address', 'email', 'fullname', 'phone', and 'success'. Either include them or remove the dependency array. You can also do a functional update 'setSuccess(s => ...)' if you only need 'success' in the 'setSuccess' call.","ArrayExpression",["289"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'queryString' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'listCart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["290"],"'id_user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listCart'. Either include it or remove the dependency array.",["291"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'listCart'. Either include them or remove the dependency array.",["292"],"'success' is assigned a value but never used.","'productLength' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMessageData'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'id_user'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has a missing dependency: 'handlePollingMessage'. Either include it or remove the dependency array.",["295"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["296"],["287"],["288"],"no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},"Update the dependencies array to be: [address, email, fullname, load, phone, success]",{"range":"313","text":"314"},"Update the dependencies array to be: [id, load_comment]",{"range":"315","text":"316"},"Update the dependencies array to be: [listCart, loadRedux]",{"range":"317","text":"318"},"Update the dependencies array to be: [checkPush, history, listCart]",{"range":"319","text":"320"},"Update the dependencies array to be: [fetchMessageData, load]",{"range":"321","text":"322"},"Update the dependencies array to be: [id_user, loadMessage]",{"range":"323","text":"324"},"Update the dependencies array to be: [activeChat, handlePollingMessage]",{"range":"325","text":"326"},"Update the dependencies array to be: [id]",{"range":"327","text":"328"},[5017,5023],"[address, email, fullname, load, phone, success]",[3520,3534],"[id, load_comment]",[1326,1337],"[listCart, loadRedux]",[3022,3033],"[checkPush, history, listCart]",[3090,3096],"[fetchMessageData, load]",[4042,4055],"[id_user, loadMessage]",[4863,4875],"[activeChat, handlePollingMessage]",[658,660],"[id]"]